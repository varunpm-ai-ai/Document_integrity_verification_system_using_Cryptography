  const [documents, setDocuments] = useState<any[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchDocuments = async () => {
      try {
        const res = await fetch("http://localhost:5000/documents");
        const data = await res.json();

        setDocuments(data);
      } catch (error) {
        console.error("Error fetching documents:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchDocuments();
  }, []);

  const handleDelete = async (id: string) => {
    if (!confirm("Are you sure you want to delete this document?")) return;

    try {
      const res = await fetch(`http://localhost:5000/documents/${id}`, {
        method: "DELETE",
      });

      if (!res.ok) throw new Error("Failed to delete document");

      setDocuments((prev) => prev.filter((doc) => doc._id !== id));
    } catch (err) {
      console.error(err);
      alert("Error deleting document");
    }
  };

  const handleUpdate = async (id: string, currentName: string) => {
    const newName = prompt("Enter new filename:", currentName);
    if (!newName || newName === currentName) return;

    try {
      const res = await fetch(`http://localhost:5000/documents/${id}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ filename: newName }),
      });

      if (!res.ok) throw new Error("Failed to update document");

      const updatedDoc = await res.json();

      setDocuments((prev) =>
        prev.map((doc) => (doc._id === id ? updatedDoc : doc))
      );
    } catch (err) {
      console.error(err);
      alert("Error updating document");
    }
  };

  const handleShare = async (id: string) => {
    try {
      const res = await fetch(`http://localhost:5000/share/${id}`, {
        method: "POST",
      });

      if (!res.ok) throw new Error("Failed to generate share link");

      const data = await res.json();

      // Display the share link (basic way)
      alert(`Shareable link: ${data.shareableLink}`);

      // Or copy it to clipboard automatically
      await navigator.clipboard.writeText(data.shareableLink);
      console.log("Link copied to clipboard!");
    } catch (err) {
      console.error(err);
      alert("Error generating share link");
    }
  };